{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\E480\\\\Desktop\\\\crwn-clothing\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\E480\\\\Desktop\\\\crwn-clothing\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\E480\\\\Desktop\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './sign-up.styles.scss';\nimport CustomButton from '../custom-button/custom-button.component';\nimport FormInput from '../form-input/form-input.component';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const onChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart(displayName, email, password);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \" Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    value: displayName,\n    name: \"displayName\",\n    required: true,\n    label: \"Display Name\",\n    handleChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    value: email,\n    name: \"email\",\n    required: true,\n    label: \"Email\",\n    handleChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    value: password,\n    name: \"password\",\n    required: true,\n    label: \"Password\",\n    handleChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    value: confirmPassword,\n    name: \"confirmPassword\",\n    required: true,\n    label: \"Confirm Password\",\n    handleChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (displayName, email, password) => dispatch(signUpStart({\n    displayName,\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/E480/Desktop/crwn-clothing/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","CustomButton","FormInput","signUpStart","SignUp","displayName","email","password","confirmPassword","userCredentials","setCredentials","onChange","event","target","value","name","handleSubmit","preventDefault","alert","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './sign-up.styles.scss';\r\n\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport FormInput from '../form-input/form-input.component'; \r\n\r\nimport {signUpStart} from '../../redux/user/user.actions';\r\n\r\nconst SignUp=({signUpStart})=>{\r\n    const [userCredentials,setCredentials]=useState({\r\n        displayName:'',\r\n        email:'',\r\n        password:'',\r\n        confirmPassword:''\r\n    })\r\n\r\n    const onChange=(event)=>{\r\n        const {value,name}=event.target;\r\n        setCredentials({...userCredentials,[name]:value});\r\n    }\r\n\r\n    const {displayName,email,password,confirmPassword}=userCredentials;\r\n\r\n    const handleSubmit=async (event)=>{\r\n        event.preventDefault();\r\n        if(password !== confirmPassword){\r\n            alert(\"passwords don't match\");\r\n            return;\r\n        }\r\n        signUpStart(displayName,email,password)\r\n    }\r\n\r\n    return(\r\n        <div className='sign-up' >\r\n            <h1 className='title' >I do not have an account</h1>\r\n            <span> Sign up with your email and password</span>\r\n            <form className='sign-up-form' onSubmit={handleSubmit} >\r\n                <FormInput\r\n                  type='text'\r\n                  value={displayName}\r\n                  name='displayName'\r\n                  required\r\n                  label='Display Name'\r\n                  handleChange={onChange}\r\n                  />\r\n                <FormInput\r\n                  type='email'\r\n                  value={email}\r\n                  name='email'\r\n                  required\r\n                  label='Email'\r\n                  handleChange={onChange}\r\n                />\r\n                <FormInput\r\n                  type='password'\r\n                  value={password}\r\n                  name='password'\r\n                  required\r\n                  label='Password'\r\n                  handleChange={onChange}\r\n                />\r\n                <FormInput\r\n                  type='password'\r\n                  value={confirmPassword}\r\n                  name='confirmPassword'\r\n                  required\r\n                  label='Confirm Password'\r\n                  handleChange={onChange}\r\n                />\r\n                <CustomButton type='submit' >SIGN UP</CustomButton>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps=dispatch=>({\r\n    signUpStart:(displayName,email,password)=>dispatch(signUpStart({displayName,email,password}))\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}