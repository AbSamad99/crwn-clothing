{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\E480\\\\Desktop\\\\crwn-clothing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBRzsZyUCHtvMW3bp5rN54Z0zqTL1xpK-c\",\n  authDomain: \"crwn-clothing-158ed.firebaseapp.com\",\n  databaseURL: \"https://crwn-clothing-158ed.firebaseio.com\",\n  projectId: \"crwn-clothing-158ed\",\n  storageBucket: \"crwn-clothing-158ed.appspot.com\",\n  messagingSenderId: \"333920402890\",\n  appId: \"1:333920402890:web:53f1b0035bd8516060e333\",\n  measurementId: \"G-BLN8K8LLQV\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`/users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (error) {\n      console.log('encountered an error', error);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const _doc$data = doc.data(),\n          title = _doc$data.title,\n          items = _doc$data.items;\n\n    return {\n      title,\n      items,\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id\n    };\n  });\n  return transformedCollection.reduce((acc, collection) => {\n    acc[collection.title.toLowerCase()] = collection;\n    return acc;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/E480/Desktop/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","acc","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","initializeApp","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config={\r\n    apiKey: \"AIzaSyBRzsZyUCHtvMW3bp5rN54Z0zqTL1xpK-c\",\r\n    authDomain: \"crwn-clothing-158ed.firebaseapp.com\",\r\n    databaseURL: \"https://crwn-clothing-158ed.firebaseio.com\",\r\n    projectId: \"crwn-clothing-158ed\",\r\n    storageBucket: \"crwn-clothing-158ed.appspot.com\",\r\n    messagingSenderId: \"333920402890\",\r\n    appId: \"1:333920402890:web:53f1b0035bd8516060e333\",\r\n    measurementId: \"G-BLN8K8LLQV\"\r\n  };\r\n\r\n  export const createUserProfileDocument= async (userAuth,additionalData)=>{\r\n    if(!userAuth) return;\r\n\r\n    const userRef=firestore.doc(`/users/${userAuth.uid}`);\r\n\r\n    const snapShot=await userRef.get(); \r\n\r\n    if(!snapShot.exists){\r\n      const {displayName,email}=userAuth;\r\n      const createdAt=new Date();\r\n      try {\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionalData\r\n        })\r\n      } catch (error) {\r\n        console.log('encountered an error',error);\r\n      }\r\n    }\r\n\r\n    return userRef;\r\n    \r\n  }\r\n\r\n  export const addCollectionAndDocuments=(collectionKey,objectsToAdd)=>{\r\n    const collectionRef=firestore.collection(collectionKey);\r\n    const batch=firestore.batch();\r\n    objectsToAdd.forEach(obj=>{\r\n      const newDocRef=collectionRef.doc();\r\n      batch.set(newDocRef,obj); \r\n    });\r\n\r\n    batch.commit()\r\n  }\r\n\r\n  export const convertCollectionsSnapshotToMap=(collections)=>{\r\n    const transformedCollection=collections.docs.map(doc=>{\r\n      const {title,items}=doc.data();\r\n      return {\r\n        title,\r\n        items,\r\n        routeName:encodeURI(title.toLowerCase()),\r\n        id:doc.id\r\n      }\r\n    });\r\n    return transformedCollection.reduce((acc,collection)=>{\r\n      acc[collection.title.toLowerCase()]=collection;\r\n      return acc\r\n    },{})\r\n  }\r\n\r\n  export const getCurrentUser=()=>{\r\n    return new Promise ((resolve,reject)=>{\r\n      const unsubscribe=auth.onAuthStateChanged(userAuth=>{\r\n        unsubscribe();\r\n        resolve(userAuth);\r\n      },reject)\r\n    })\r\n  }\r\n\r\n  firebase.initializeApp(config);\r\n\r\n  export const auth=firebase.auth();\r\n  export const firestore=firebase.firestore();\r\n\r\n  export const googleProvider=new firebase.auth.GoogleAuthProvider();\r\n  googleProvider.setCustomParameters({prompt:'select_account'});\r\n  export const signInWithGoogle=()=>auth.signInWithPopup(googleProvider);\r\n\r\n  export default firebase;"]},"metadata":{},"sourceType":"module"}