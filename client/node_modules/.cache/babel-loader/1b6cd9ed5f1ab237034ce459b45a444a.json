{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\E480\\\\Desktop\\\\crwn-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { userActionTypes } from './user.types';\nconst Initial_State = {\n  currentUser: null\n};\n\nconst userReducer = (state = Initial_State, action) => {\n  switch (action.type) {\n    case userActionTypes.SET_CURRENT_USER:\n      return _objectSpread({}, state, {\n        currentUser: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["C:\\Users\\E480\\Desktop\\crwn-clothing\\src\\redux\\user\\user.reducer.js"],"names":["userActionTypes","Initial_State","currentUser","userReducer","state","action","type","SET_CURRENT_USER","payload"],"mappings":";;;;;;AAAA,SAAQA,eAAR,QAA8B,cAA9B;AAEA,MAAMC,aAAa,GAAC;AAChBC,EAAAA,WAAW,EAAC;AADI,CAApB;;AAIA,MAAMC,WAAW,GAAC,CAACC,KAAK,GAACH,aAAP,EAAqBI,MAArB,KAA8B;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,eAAe,CAACO,gBAArB;AACI,+BACOH,KADP;AAEIF,QAAAA,WAAW,EAACG,MAAM,CAACG;AAFvB;;AAIJ;AAAQ,aAAOJ,KAAP;AANZ;AAQH,CATD;;AAWA,eAAeD,WAAf","sourcesContent":["import {userActionTypes} from './user.types';\r\n\r\nconst Initial_State={\r\n    currentUser:null\r\n};\r\n\r\nconst userReducer=(state=Initial_State,action)=>{\r\n    switch(action.type){\r\n        case userActionTypes.SET_CURRENT_USER:\r\n            return{\r\n                ...state,\r\n                currentUser:action.payload\r\n            } \r\n        default:return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;"]},"metadata":{},"sourceType":"module"}