{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\E480\\\\Desktop\\\\crwn-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { onGoogleSignInStart } from '../../redux/user/user.sagas';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      required: true,\n      label: \"Email\",\n      handleChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      required: true,\n      label: \"Password\",\n      handleChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"sign in\"), React.createElement(CustomButton, {\n      isGoogleSignIn: true,\n      onClick: signInWithGoogle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"sign in with google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onGoogleSignInStart: () => dispatch(onGoogleSignInStart)\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/E480/Desktop/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","auth","signInWithGoogle","onGoogleSignInStart","SignIn","Component","constructor","props","onChange","event","target","value","name","setState","handleSubmit","preventDefault","state","email","password","signInWithEmailAndPassword","error","console","log","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './sign-in.styles.scss';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport {auth,signInWithGoogle} from '../../firebase/firebase.utils';\r\nimport {onGoogleSignInStart} from '../../redux/user/user.sagas';\r\n\r\nclass SignIn extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            email:'',\r\n            password:''\r\n        }\r\n    }\r\n\r\n    onChange=(event)=>{\r\n        const {value,name}=event.target;\r\n        this.setState({[name]:value});\r\n    }\r\n\r\n    handleSubmit=async (event)=>{\r\n        event.preventDefault();\r\n        const {email,password}=this.state;\r\n        try {\r\n            await auth.signInWithEmailAndPassword(email,password);\r\n            this.setState({\r\n                email:'',\r\n                password:''\r\n            })\r\n        } catch (error) {\r\n            console.log(error);            \r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='sign-in' >\r\n                <h1 className='title' >I already have an account</h1>\r\n                <span>Sign in with your email and password</span>\r\n                <form onSubmit={this.handleSubmit} >\r\n                    <FormInput\r\n                     type='email' \r\n                     name='email' \r\n                     value={this.state.email} \r\n                     required\r\n                     label='Email' \r\n                     handleChange={this.onChange}          \r\n                     />\r\n                    <FormInput \r\n                    type='password' \r\n                    name='password' \r\n                    value={this.state.password} \r\n                    required \r\n                    label='Password'\r\n                    handleChange={this.onChange}\r\n                    />\r\n                    <div className='buttons' >\r\n                    <CustomButton type='submit' >sign in</CustomButton>\r\n                    <CustomButton isGoogleSignIn onClick={signInWithGoogle} >sign in with google</CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>({\r\n    onGoogleSignInStart:()=>dispatch(onGoogleSignInStart)\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}