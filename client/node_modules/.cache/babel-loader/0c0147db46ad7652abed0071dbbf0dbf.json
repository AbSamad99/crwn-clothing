{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\E480\\\\Desktop\\\\crwn-clothing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBRzsZyUCHtvMW3bp5rN54Z0zqTL1xpK-c\",\n  authDomain: \"crwn-clothing-158ed.firebaseapp.com\",\n  databaseURL: \"https://crwn-clothing-158ed.firebaseio.com\",\n  projectId: \"crwn-clothing-158ed\",\n  storageBucket: \"crwn-clothing-158ed.appspot.com\",\n  messagingSenderId: \"333920402890\",\n  appId: \"1:333920402890:web:53f1b0035bd8516060e333\",\n  measurementId: \"G-BLN8K8LLQV\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`/users/${userAuth.uid}`);\n  const collectionRef = firestore.collection('users');\n  const snapShot = await userRef.get();\n  const collectionSnapShot = await collectionRef.get();\n  console.log({\n    collection: collectionSnapShot.docs.map(doc => doc.data)\n  });\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (error) {\n      console.log('encountered an error', error);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/E480/Desktop/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","collectionRef","collection","snapShot","get","collectionSnapShot","console","log","docs","map","data","exists","displayName","email","createdAt","Date","set","error","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAC;AACTC,EAAAA,MAAM,EAAE,yCADC;AAETC,EAAAA,UAAU,EAAE,qCAFH;AAGTC,EAAAA,WAAW,EAAE,4CAHJ;AAITC,EAAAA,SAAS,EAAE,qBAJF;AAKTC,EAAAA,aAAa,EAAE,iCALN;AAMTC,EAAAA,iBAAiB,EAAE,cANV;AAOTC,EAAAA,KAAK,EAAE,2CAPE;AAQTC,EAAAA,aAAa,EAAE;AARN,CAAb;AAWE,OAAO,MAAMC,yBAAyB,GAAE,OAAOC,QAAP,EAAgBC,cAAhB,KAAiC;AACvE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAACC,SAAS,CAACC,GAAV,CAAe,UAASJ,QAAQ,CAACK,GAAI,EAArC,CAAd;AACA,QAAMC,aAAa,GAACH,SAAS,CAACI,UAAV,CAAqB,OAArB,CAApB;AAEA,QAAMC,QAAQ,GAAC,MAAMN,OAAO,CAACO,GAAR,EAArB;AACA,QAAMC,kBAAkB,GAAE,MAAMJ,aAAa,CAACG,GAAd,EAAhC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACL,IAAAA,UAAU,EAACG,kBAAkB,CAACG,IAAnB,CAAwBC,GAAxB,CAA4BV,GAAG,IAAEA,GAAG,CAACW,IAArC;AAAZ,GAAZ;;AAEA,MAAG,CAACP,QAAQ,CAACQ,MAAb,EAAoB;AAAA,UACXC,WADW,GACQjB,QADR,CACXiB,WADW;AAAA,UACCC,KADD,GACQlB,QADR,CACCkB,KADD;AAElB,UAAMC,SAAS,GAAC,IAAIC,IAAJ,EAAhB;;AACA,QAAI;AACF,YAAMlB,OAAO,CAACmB,GAAR;AACJJ,QAAAA,WADI;AAEJC,QAAAA,KAFI;AAGJC,QAAAA;AAHI,SAIDlB,cAJC,EAAN;AAMD,KAPD,CAOE,OAAOqB,KAAP,EAAc;AACdX,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCU,KAAnC;AACD;AACF;;AAED,SAAOpB,OAAP;AAED,CA3BM;AA6BPb,QAAQ,CAACkC,aAAT,CAAuBjC,MAAvB;AAEA,OAAO,MAAMkC,IAAI,GAACnC,QAAQ,CAACmC,IAAT,EAAX;AACP,OAAO,MAAMrB,SAAS,GAACd,QAAQ,CAACc,SAAT,EAAhB;AAEP,MAAMsB,QAAQ,GAAC,IAAIpC,QAAQ,CAACmC,IAAT,CAAcE,kBAAlB,EAAf;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAC,MAAIL,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA3B;AAEP,eAAepC,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config={\r\n    apiKey: \"AIzaSyBRzsZyUCHtvMW3bp5rN54Z0zqTL1xpK-c\",\r\n    authDomain: \"crwn-clothing-158ed.firebaseapp.com\",\r\n    databaseURL: \"https://crwn-clothing-158ed.firebaseio.com\",\r\n    projectId: \"crwn-clothing-158ed\",\r\n    storageBucket: \"crwn-clothing-158ed.appspot.com\",\r\n    messagingSenderId: \"333920402890\",\r\n    appId: \"1:333920402890:web:53f1b0035bd8516060e333\",\r\n    measurementId: \"G-BLN8K8LLQV\"\r\n  };\r\n\r\n  export const createUserProfileDocument= async (userAuth,additionalData)=>{\r\n    if(!userAuth) return;\r\n\r\n    const userRef=firestore.doc(`/users/${userAuth.uid}`);\r\n    const collectionRef=firestore.collection('users');\r\n\r\n    const snapShot=await userRef.get(); \r\n    const collectionSnapShot= await collectionRef.get();\r\n    console.log({collection:collectionSnapShot.docs.map(doc=>doc.data)});\r\n\r\n    if(!snapShot.exists){\r\n      const {displayName,email}=userAuth;\r\n      const createdAt=new Date();\r\n      try {\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionalData\r\n        })\r\n      } catch (error) {\r\n        console.log('encountered an error',error);\r\n      }\r\n    }\r\n\r\n    return userRef;\r\n    \r\n  }\r\n\r\n  firebase.initializeApp(config);\r\n\r\n  export const auth=firebase.auth();\r\n  export const firestore=firebase.firestore();\r\n\r\n  const provider=new firebase.auth.GoogleAuthProvider();\r\n  provider.setCustomParameters({prompt:'select_account'});\r\n  export const signInWithGoogle=()=>auth.signInWithPopup(provider);\r\n\r\n  export default firebase;"]},"metadata":{},"sourceType":"module"}