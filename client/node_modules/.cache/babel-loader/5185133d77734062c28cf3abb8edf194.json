{"ast":null,"code":"import { takeLatest, put, call } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/E480/Desktop/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","put","call","firestore","convertCollectionsSnapshotToMap","fetchCollectionsFailure","fetchCollectionsSuccess","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,UAAR,EAAmBC,GAAnB,EAAuBC,IAAvB,QAAkC,oBAAlC;AAEA,SAAQC,SAAR,EAAkBC,+BAAlB,QAAwD,+BAAxD;AAEA,SAAQC,uBAAR,EAAgCC,uBAAhC,QAA8D,gBAA9D;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAiC;AACpC,MAAI;AACA,UAAMC,aAAa,GAACN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAApB;AACA,UAAMC,QAAQ,GAAC,MAAMF,aAAa,CAACG,GAAd,EAArB;AACA,UAAMC,cAAc,GAAC,MAAMX,IAAI,CAACE,+BAAD,EAAiCO,QAAjC,CAA/B;AACA,UAAMV,GAAG,CAACK,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMb,GAAG,CAACI,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMhB,UAAU,CACZO,eAAe,CAACU,uBADJ,EAEZT,qBAFY,CAAhB;AAIH","sourcesContent":["import {takeLatest,put,call} from 'redux-saga/effects';\r\n\r\nimport {firestore,convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\n\r\nimport {fetchCollectionsFailure,fetchCollectionsSuccess} from './shop.actions'\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsAsync(){    \r\n    try {\r\n        const collectionRef=firestore.collection('collections');\r\n        const snapshot=yield collectionRef.get();\r\n        const collectionsMap=yield call(convertCollectionsSnapshotToMap,snapshot);\r\n        yield put(fetchCollectionsSuccess(collectionsMap));\r\n    } catch (error) {\r\n        yield put(fetchCollectionsFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* fetchCollectionsStart(){\r\n    yield takeLatest(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync\r\n        )\r\n}"]},"metadata":{},"sourceType":"module"}